Define two variables
--------------------
resourceGroup
aksCluster

0. Do helm init (client & server versions should match!)

1. Azure cli
az aks get-credentials -g $(resourceGroup) -n $(aksName)

currentSlot=`(helm get values --all aks-aspnetcore-lab-prod | grep -Po 'productionSlot: \K.*')`
currentTag=`(helm get values --all aks-aspnetcore-lab-prod | grep -Po 'productionTag: \K.*')`
echo "CurrentSlot = $currentSlot"

if [ "$currentSlot" == "blue" ]; then
    newSlot="green"
else
    newSlot="blue"
fi

echo "##vso[task.setvariable variable=currentSlot]$currentSlot"
echo "##vso[task.setvariable variable=newSlot]$newSlot"

if [ "$currentSlot" == "blue" ]; then
   tagBlue="image.tag=$currentTag"
   tagGreen="image.tag0=$(Build.BuildId)"
else
   tagBlue="image.tag=$(Build.BuildId)"
   tagGreen="image.tag0=$currentTag"
fi

echo "##vso[task.setvariable variable=tagBlue]$tagBlue"
echo "##vso[task.setvariable variable=tagGreen]$tagGreen"

2. Bash script - Print slot values
# Write your commands here

echo "---------------------------------------"
echo "currentSlot = $(currentSlot)"
echo "newSlot = $(newSlot)"
echo "****************************"
echo "tagBlue = $(tagBlue)"
echo "tagGreen = $(tagGreen)"
echo "---------------------------------------"

3. helm upgrade - deploy both blue and green
--set image.repository=csulabtest.azurecr.io/claims-api --set "$(tagBlue)" --set "$(tagGreen)" --set sqldb.connectionString="$(sqlDbConnectionString)" --set service.type=ClusterIP --set ingress.enabled=true  --set "$(newSlot)".enabled=true --reuse-values

Use a 'manual intervention' task to confirm - new deployment or rollback
------------------------------------------------------------------------
Test the API's in Production and Staging URL's

Production (current release) => http://claims-api-prod.akslab.com/api/v1/claims
Staging (new release) http://claims-api-stage.akslab.com/api/v1/claims
------------------------------------------------------------------------

Swap slots (On resume - success)
----------
1. Azure cli
az aks get-credentials -g $(resourceGroup) -n $(aksName)

currentSlot=`(helm get values --all aks-aspnetcore-lab-prod | grep -Po 'productionSlot: \K.*')`
echo "CurrentSlot = $currentSlot"

if [ "$currentSlot" == "blue" ]; then
    newSlot="green"
else
    newSlot="blue"
fi

echo "##vso[task.setvariable variable=currentSlot]$currentSlot"
echo "##vso[task.setvariable variable=newSlot]$newSlot"

2. Bash script
echo "---------------------------------------"
echo "currentSlot = $(currentSlot)"
echo "newSlot = $(newSlot)"
echo "****************************"

3. helm deploy - Set productionSlot to newSlot
--set productionSlot="$(newSlot)","$(currentSlot)".enabled=false,productionTag=$(Build.BuildId) --reuse-values

Rollback to current release (On reject - failure)
---------------------------
1. Azure cli
az aks get-credentials -g $(resourceGroup) -n $(aksName)

currentSlot=`(helm get values --all aks-aspnetcore-lab-prod | grep -Po 'productionSlot: \K.*')`
echo "CurrentSlot = $currentSlot"

if [ "$currentSlot" == "blue" ]; then
    newSlot="green"
    currentTag=`(helm get values --all aks-aspnetcore-lab-prod | grep -Po 'tag: \K.*')`
else
    newSlot="blue"
    currentTag=`(helm get values --all aks-aspnetcore-lab-prod | grep -Po 'tag0: \K.*')`
fi
echo "##vso[task.setvariable variable=currentSlot]$currentSlot"
echo "##vso[task.setvariable variable=newSlot]$newSlot"
echo "##vso[task.setvariable variable=currentTag]$currentTag"

2. Bash script
echo "---------------------------------------"
echo "currentSlot = $(currentSlot)"
echo "newSlot = $(newSlot)"
echo "currentTag = $(currentTag)"
echo "****************************"

3. helm deploy - rollback to current slot, delete staging infra
--set "$(newSlot)".enabled=false,productionTag="$(currentTag)" --reuse-values
